apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{  .Chart.Name }}-deployment"
  labels:
    chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: "{{  .Chart.Name }}-selector"
        version: "current"
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      containers:
      - name: "{{  .Chart.Name  }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{ if .Values.istio.enabled }}
{{ else }}
        readinessProbe:
          httpGet:
            path: /health
            port: 9080
          initialDelaySeconds: 20
{{ end }}
        resources:
          requests:
            cpu: "{{ .Values.image.resources.requests.cpu }}"
            memory: "{{ .Values.image.resources.requests.memory }}"
        env:
          - name: PORT
            value: "{{ .Values.service.servicePort }}"
          - name: APPLICATION_NAME
            value: "{{ .Release.Name }}"
          - name: KAFKA_ENV
            value: "{{ .Values.eventstreams.env }}"
          - name: KAFKA_BROKERS
            valueFrom:
              configMapKeyRef:
                name: "{{ .Values.eventstreams.brokersConfigMap }}"
                key: brokers
          {{- if or (eq .Values.eventstreams.env "IBMCLOUD") (eq .Values.eventstreams.env "ICP") }}
          - name: KAFKA_APIKEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.eventstreams.apikeyConfigMap }}"
                key: binding
          {{- end }}
          {{- if .Values.java.truststore.enabled }}
          - name: TRUSTSTORE_ENABLED
            value: "{{ .Values.java.truststore.enabled }}"
          - name: TRUSTSTORE_PWD
            value: "{{ .Values.java.truststore.pwd }}"
          - name: TRUSTSTORE_PATH
            value: "{{ .Values.java.truststore.pathName }}/{{ .Values.java.truststore.fileName }}"
          {{- end }}
{{- if .Values.generatedBindings.enabled }}
{{.Files.Get "bindings.yaml" | indent 10 }}
{{- end }}
        {{- if .Values.java.truststore.enabled }}
        volumeMounts:
          - mountPath: "{{ .Values.java.truststore.pathName }}"
            name: eventstreams-truststore
            readOnly: true
        {{- end }}
      {{- if .Values.java.truststore.enabled }}
      volumes:
        - name: eventstreams-truststore
          secret:
            secretName: "{{ .Values.java.truststore.secretName }}"
      {{- end }}
